# TensorFlow 2: Set up GPU, cuDNN, python, jupyter & tf2 **on Windows 11 for Dell Workstation5820**

## Check if you have all the component for GPU to talk to Python on Windows 11 home edition and Dell precision workstation 5820

## In Summary

1. Install 2019 +C++ game
2. Install the GPU drivers [NVDIA CUDA version 11.7]
3. Installing cuDNN SDK (matching with CUDA)
4. Check that these paths are in the system's `Path` environment variable (no additional action required)

    ![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3fdd2e78-8cd8-4292-a616-c885b0dbcbb7/Untitled.png)

5. Install Miniconda 3.9 
6. Create and activate a virtual environment using conda:
    ```bash
    conda create --name tf python=3.9
    conda activate tf
    conda install -c conda-forge cudatoolkit=11.2 cudnn=8.1.0
    pip install --upgrade pip
    pip install "tensorflow-gpu<2.11"
    ```

For more information and troubleshooting, see below:

## **Microsoft Visual Studio**

1. **Uninstall the 2022**
2. **Install 2019 +C++ game**

    ## **Troubleshooting for VS 2022**

    If you get the VS 2022 to work, this might help. Make sure C packages are installed and then go to:
    
    ```bash
    C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build
    ```

    Copy the path and open it in the terminal:

    ![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a487f927-a8b9-4938-87a5-8d3d251b7004/Untitled.png)

    ![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/07fa5603-cdf9-499d-9bdc-9424c48a83e3/Untitled.png)

## **NVIDIA GPU drivers**

**Not to do:** Don't install version 12, note that cuDNN needs to match this version. There is a website to check the compatibility. 

[CUDA 12.2 Release Notes](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#cuda-compiler-new-features)

## **Checking for a CUDA-capable NVIDIA GPU**

**CUDA** (by NVIDIA) is the most popular platform for parallel computing and programming. 

- **Step 1:** Check whether there is any GPU and its part number if a GPU is available. There are two ways to do it:
    1. Check the specification of your device given by the manufacturer.
    2. Go to Windows **Device Manager â†’ Display Adapters**. 

    ![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8df0b886-f419-455b-b63f-93762bc6216a/Untitled.png)

## **Installing the GPU drivers [install version 11.7]**

If you don't have GPU drivers installed on your PC or laptop, you need to install the correct driver through [this website](https://www.nvidia.com/download/index.aspx). If your GPU driver is already shown in the Display Adaptors, you can skip this step.

**Selecting the right driver for my NVIDIA GPU** (Image from NVIDIA website, screenshot by author)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ace42707-1c33-4fc9-bdb4-b81dc7dfd605/Untitled.png)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/46f54db7-7168-44c6-b522-9e7a7c58aa72/Untitled.png)

Run the toolkit after this.

2.6. Verify the Installation
The version of the CUDA Toolkit can be checked by running `nvcc -V` in a Command Prompt window.

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/735fa0f8-4efa-4fd4-a2af-85f7b2cb2ad1/Untitled.png)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7f1e1857-a1f0-4790-8048-5924c247c6ce/Untitled.png)

If you get this error: remove nighsite visual studio and try again:

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/da7c6761-f89a-425c-9be8-db56c8d10ce6/Untitled.png)

System restart is required.

## **cuDNN SDK**

### **Installing cuDNN SDK**

**Should match the CUDA just installed**

**Step 1:** Visit [this website](https://www.tensorflow.org/install/source_windows#gpu) to see the cuDNN SDK version number that is compatible with the installed Python and TensorFlow versions.

![cuDNN SDK versions](https://miro.medium.com/v2/resize:fit:1400/1*SjFt__EiqoqE65CCUonw-w.png)

**Selecting the right version for the cuDNN SDK** (Image from TensorFlow website, screenshot by author)

The most important thing is selecting the correct cuDNN SDK version that matches the installed Python, TensorFlow, and CUDA Toolkit versions. [We i](https://developer.nvidia.com/rdp/cudnn-download#a-collapse893-120)

[Download cuDNN v8.9.3 (July 11th, 2023), for CUDA 12.x](https://developer.nvidia.com/rdp/cudnn-download#a-collapse893-120)

- **Step 2:** Go to [this website](https://developer.nvidia.com/cudnn) to download the cuDNN SDK. You should have an account on NVIDIA to proceed. You will also need to fill out a small survey form before downloading.
- [Local Installer for Windows (Zip)](https://developer.nvidia.com/downloads/compute/cudnn/secure/8.9.3/local_installers/12.x/cudnn-windows-x86_64-8.9.3.28_cuda12-archive.zip/)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/eb69565b-1dbb-4695-8c20-cfea7961c63f/Untitled.png)

- **Step 3:** Download the ***.zip*** file.
- **Step 4:** Extract the ***.zip*** file and copy the following folders inside it.

![cuDNN SDK files](https://miro.medium.com/v2/resize:fit:1238/1*WRJnxq-LiVei0_4es5HdQg.png)

(Image by author)

- **Step 5:** Go the following path. Your path may vary depending on the architecture and the version numbers of installed software. So, do not copy my path!

